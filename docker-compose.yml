version: "3"
services:

  oase-base:
    image: exastro/oase-base:${OASE_VERSION:-latest}
    container_name: oase-base
    hostname: oase-base
    restart: on-failure
    tty: true
    build:
      context: ./oase-base
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}

  oase-backyard:
    image: exastro/oase-backyard:${OASE_VERSION:-latest}
    container_name: oase-backyard
    hostname: oase-backyard
    restart: on-failure
    tty: true
    build:
      context: ./oase-backyard
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}

  oase-setup:
    image: exastro/oase-setup:${OASE_VERSION:-latest}
    container_name: oase-setup
    hostname: oase-setup
    restart: on-failure:3
    tty: true
    build:
      context: ./oase-setup
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    networks:
      - private
    depends_on:
      - mariadb

  oase-web:
    image: exastro/oase-web:${OASE_VERSION:-latest}
    container_name: oase-web
    hostname: oase-web
    restart: on-failure
    tty: true
    build:
      context: ./oase-web
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - ./logs/webaplogs:/exastro/OASE/oase-root/logs/webaplogs
    ports:
      - '${OASE_WEB_PORT:-40080}:80'
    networks:
      - public
      - private
    depends_on:
      oase-setup:
        condition: service_completed_successfully

  oase-apply:
    image: exastro/oase-apply:${OASE_VERSION:-latest}
    container_name: oase-apply
    hostname: oase-apply
    restart: on-failure
    tty: true
    build:
      context: ./oase-apply
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - ./logs/oase_apply:/exastro/OASE/oase-root/logs/backyardlogs/oase_apply
      - common-m2-repository:/home/oase/.m2/repository/com/oase
    networks:
      - private
    depends_on:
      oase-setup:
        condition: service_completed_successfully

  oase-accept:
    image: exastro/oase-accept:${OASE_VERSION:-latest}
    container_name: oase-accept
    hostname: oase-accept
    restart: on-failure
    tty: true
    build:
      context: ./oase-accept
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
    volumes:
      - ./logs/oase_accept:/exastro/OASE/oase-root/logs/backyardlogs/oase_accept
    networks:
      - private
    depends_on:
      oase-setup:
        condition: service_completed_successfully

  oase-agent:
    image: exastro/oase-agent:${OASE_VERSION:-latest}
    container_name: oase-agent
    hostname: oase-agent
    restart: on-failure:3
    tty: true
    build:
      context: ./oase-agent
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
    volumes:
      - ./logs/oase_agent:/exastro/OASE/oase-root/logs/backyardlogs/oase_agent
    networks:
      - private

  oase-action:
    image: exastro/oase-action:${OASE_VERSION:-latest}
    container_name: oase-action
    hostname: oase-action
    restart: on-failure:3
    tty: true
    build:
      context: ./oase-action
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
    volumes:
      - ./logs/oase_action:/exastro/OASE/oase-root/logs/backyardlogs/oase_action
    networks:
      - private

  oase-ita-collaboration:
    image: exastro/oase-ita-collaboration:${OASE_VERSION:-latest}
    container_name: oase-ita-collaboration
    hostname: oase-ita-collaboration
    restart: on-failure:3
    tty: true
    build:
      context: ./oase-ita-collaboration
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
    volumes:
      - ./logs/exastro_collaboration:/exastro/OASE/oase-root/logs/backyardlogs/exastro_collaboration
    networks:
      - private

  oase-servicenow-notification:
    image: exastro/oase-servicenow-notification:${OASE_VERSION:-latest}
    container_name: oase-servicenow-notification
    hostname: oase-servicenow-notification
    restart: on-failure:3
    tty: true
    build:
      context: ./oase-servicenow-notification
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
    volumes:
      - ./logs/servicenow_notification:/exastro/OASE/oase-root/logs/backyardlogs/servicenow_notification
    networks:
      - private

  oase-zabbix-monitoring:
    image: exastro/oase-zabbix-monitoring:${OASE_VERSION:-latest}
    container_name: oase-zabbix-notification
    hostname: oase-zabbix-notification
    restart: on-failure:3
    tty: true
    build:
      context: ./oase-zabbix-monitoring
      dockerfile: ./Dockerfile
      args:
        - OASE_VERSION=${OASE_VERSION:-latest}
    volumes:
      - ./logs/oase_monitoring:/exastro/OASE/oase-root/logs/backyardlogs/oase_monitoring
    networks:
      - private

  rabbitmq:
    image: rabbitmq:3.9.8-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: on-failure
    tty: true
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD:-Ch@ngeMe}
    ports:
      - "${RATBBITMQ_NODE_PORT:-45672}:5672"
      - "${RATBBITMQ_MGT_PORT:-55672}:15672"
    networks:
      - public
      - private

  mariadb:
    image: mariadb:10.6.4
    container_name: mariadb
    hostname: mariadb
    restart: on-failure
    tty: true
    ports:
      - "${DB_PORT:-43306}:3306"
    environment:
      TZ: "Asia/Tokyo"
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-Ch@ngeMe}
      MARIADB_DATABASE: ${MARIADB_DATABASE:-OASE_DB}
      MARIADB_USER: ${MARIADB_USER:-OASE_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD:-Ch@ngeMe}
      MARIADB_ROOT_HOST: "%"
    networks:
      - private

  it-automation:
    image: exastro/it-automation:1.9.0-ja
    container_name: it-automation
    hostname: it-automation
    restart: on-failure
    tty: true
    privileged: true
    ports:
      - ${ITA_PORT:-41080}:80
    networks:
      - private

  business-central:
    image: exastro/business-central:${OASE_VERSION:-latest}
    container_name: business-central
    hostname: business-central
    restart: on-failure
    tty: true
    build:
      context: ./business-central
      dockerfile: ./Dockerfile
    ports:
      - "${BUSINESS_CENTRAL_PORT:-48080}:8080"
    environment:
      DROOLS_USER_NAME: ${JBOSS_USER:-admin}
      DROOLS_USER_PASSWORD: ${JBOSS_PASSWORD:-admin}
      DROOLS_USER_ROLE: ${JBOSS_USER_ROLE:-"admin,kie-server,rest-all"}
      KIE_SERVER_LOCATION: http://kie-server:8080/kie-server/services/rest/server
      KIE_SERVER_CONTROLLER: http://business-central:8080/business-central/rest/controller
      KIE_MAVEN_REPO: http://business-central:8080/business-central/maven2
    volumes:
      - common-m2-repository:/opt/jboss/.m2/repository/com/oase
    networks:
      - private

  kie-server:
    image: exastro/kie-server:${OASE_VERSION:-latest}
    container_name: kie-server
    hostname: kie-server
    restart: on-failure
    tty: true
    build:
      context: ./kie-server
      dockerfile: ./Dockerfile
    ports:
      - "${KIE_SERVER_HTTP:-48180}:8080"
    volumes:
      - common-m2-repository:/opt/jboss/.m2/repository/com/oase
    environment:
      DROOLS_USER_NAME: ${JBOSS_USER:-admin}
      DROOLS_USER_PASSWORD: ${JBOSS_PASSWORD:-admin}
      DROOLS_USER_ROLE: ${JBOSS_USER_ROLE:-"admin,kie-server,rest-all"}
      KIE_SERVER_LOCATION: http://kie-server:8080/kie-server/services/rest/server
      KIE_SERVER_CONTROLLER: http://business-central:8080/business-central/rest/controller
      KIE_MAVEN_REPO: http://business-central:8080/business-central/maven2
    volumes:
      - common-m2-repository:/opt/jboss/.m2/repository/com/oase
    depends_on:
      - business-central
    networks:
      - private
    depends_on:
      - business-central

volumes:
  common-m2-repository:

networks:
  public:
    driver: bridge
  private:
    driver: bridge

